{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint/eslint-plugin"],
  "extends": [
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:prettier/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "root": true,
  "env": {
    "node": true
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "ignorePatterns": ["node_modules", "dist", ".esbuild", "**/*.js"],
  "rules": {
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "block",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "case",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "cjs-import",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "class",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "const",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "default",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "directive",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "export",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "expression",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "for",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "let",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "multiline-block-like",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "multiline-expression",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "singleline-const",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "singleline-let",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "singleline-var",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "switch",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "try",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "var",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "while",
        "next": "*"
      }
    ],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-function-return-type": ["error"],
    "eol-last": ["error", "always"],
    "brace-style": ["error", "1tbs"],
    "arrow-parens": ["error", "always"],
    "object-curly-spacing": ["error", "always"],
    "prettier/prettier": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/camelcase": "off",
    "import/order": [
      "error",
      {
        "groups": [["external", "builtin"], ["internal"], ["index", "sibling", "parent", "object"]],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "pathGroupsExcludedImportTypes": ["builtin"],
        "pathGroups": [
          {
            "pattern": "@common/**",
            "group": "internal"
          }
        ]
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "overrides": {
          "accessors": "explicit",
          "constructors": "explicit",
          "methods": "explicit",
          "properties": "explicit",
          "parameterProperties": "explicit"
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "filter": {
          "regex": "^(ID)$",
          "match": false
        }
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ],
    "import/no-unresolved": 0,
    "@typescript-eslint/no-empty-function": 0,
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "no-unused-vars": "error",
    "@typescript-eslint/no-unused-vars": 2,
    "import/export": 0,
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": false
      }
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "fixStyle": "inline-type-imports"
      }
    ],
    "object-shorthand": ["error"]
  },
  "overrides": [{
    "files": ["apps/frontend/**/*.ts", "apps/frontend/**/*.tsx"],
    "env": {
      "es6": true
    },
    "extends": [
      "plugin:@typescript-eslint/recommended",
      "prettier",
      "plugin:react/recommended",
      "plugin:react-hooks/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "rules": {
      "@typescript-eslint/naming-convention": "off",
      "react/react-in-jsx-scope": "off",
      "react/prop-types": "off"
    }
  }]
}
